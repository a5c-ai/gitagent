name: AI Bug Fixer
on:
  push:
    branches: ["main", "develop"]
    paths: ["bug-reports/*.md", "issues/*.md", "BUGS.md"]
  pull_request:
    branches: ["main", "develop"]
    types: ["opened", "synchronize"]
    paths: ["bug-reports/*.md", "issues/*.md", "BUGS.md"]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  ai-bug-fixer:
    runs-on: ubuntu-latest
    name: AI Bug Fixer with Claude
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run AI Bug Fixer
        uses: a5c-ai/gitagent@main
        with:
          agent-type: 'claude'
          model: 'claude-3-sonnet-20241022'
          include-file-content: true
          include-file-diff: true
          file-diff-context: 5
          claude-api-key: ${{ secrets.CLAUDE_API_KEY }}
          prompt-template-file: 'prompts/ai-bug-fixer.md'

      - name: Create Bug Fix Branch
        if: github.event_name == 'push'
        id: create_branch
        run: |
          # Get list of changed bug report files
          BUG_FILES=$(echo '${{ toJson(github.event.commits[0].modified) }}' | jq -r '.[] | select(endswith(".md")) | split("/")[-1] | split(".")[0]' | tr '\n' '-' | sed 's/-$//')
          
          # Create branch name
          BRANCH_NAME="ai-bugfix-${BUG_FILES}-$(date +%Y%m%d-%H%M%S)"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          
          # Create and switch to new branch
          git checkout -b $BRANCH_NAME
          git config user.name "AI Bug Fixer"
          git config user.email "ai-bug-fixer@github-actions"

      - name: Commit Bug Fixes
        if: github.event_name == 'push'
        run: |
          # Add all changed files
          git add -A
          
          # Check if there are changes to commit
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            # Get bug report files for commit message
            BUG_FILES=$(echo '${{ toJson(github.event.commits[0].modified) }}' | jq -r '.[] | select(endswith(".md")) | split("/")[-1] | split(".")[0]' | tr '\n' ', ' | sed 's/, $//')
            
            git commit -m "ðŸ¤– AI Bug Fixes: $BUG_FILES"
            git push origin ${{ steps.create_branch.outputs.branch_name }}
          fi

      - name: Create Pull Request
        if: github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const statusPath = '/tmp/ai-bug-fixer-status.md';
            
            let statusContent = '';
            if (fs.existsSync(statusPath)) {
              statusContent = fs.readFileSync(statusPath, 'utf8').substring(0, 500);
            }
            
            const bugFiles = context.payload.commits[0].modified
              .filter(file => file.endsWith('.md'))
              .map(file => file.split('/').pop())
              .join(', ');
            
            const pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ðŸ¤– Automated Bug Fixes from AI Developer`,
              head: '${{ steps.create_branch.outputs.branch_name }}',
              base: 'main',
              body: `## ðŸ¤– AI-Generated Bug Fixes
              
              This PR contains automated bug fixes generated by the AI Bug Fixer agent.
              
              ### Bug Reports Processed
              - ðŸ“‹ ${bugFiles}
              
              ### Implementation Summary
              The AI developer analyzed the bug reports and implemented comprehensive fixes:
              
              ${statusContent}...
              
              ### Files Modified
              Check the commit history for detailed changes made by the AI.
              
              ---
              **Generated by:** AI Bug Fixer v2.0.0  
              **Trigger:** ${{ github.event_name }} on ${{ github.ref_name }}  
              **Commit:** ${{ github.sha }}
              `,
              draft: false
            });
            
            // Add labels
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.data.number,
              labels: ['ai-generated', 'bug-fix', 'automated', 'needs-review']
            });

      - name: Post Status Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const statusPath = '/tmp/ai-bug-fixer-status.md';
            
            if (fs.existsSync(statusPath)) {
              const status = fs.readFileSync(statusPath, 'utf8');
              
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## ðŸ¤– AI Bug Fixer Results\n\n**Files Processed:** ${context.payload.pull_request.changed_files}\n**Commit:** \`${context.sha.substring(0, 8)}\`\n\n### Detailed Status Report\n${status}\n\n---\n\n### Files Analyzed\n${context.payload.pull_request.changed_files > 0 ? 'Check the file changes in this PR' : 'No files were changed'}`
              });
            } 