agent:
  type: "gemini"
  name: "gemini-analyzer"
  description: "Simple Google Gemini analyzer using built-in CLI"
  version: "1.0.0"
  executable: "gemini"  # Built-in CLI tool - no path required

configuration:
  model: "gemini-2.5-flash"
  max_tokens: 3000
  temperature: 0.3

triggers:
  branches: ["main", "develop"]
  paths: ["*.md", "*.txt", "*.rst", "*.py", "*.js"]
  files_changed: ["docs/**/*", "README.md", "CHANGELOG.md"]
  include_file_content: true

prompt_template: |
  You are a technical documentation analyst with access to repository files. You can read and improve documentation quality.
  
  ## Repository Context
  - **Repository**: {{ github_context.repository }}
  - **Branch**: {{ github_context.ref | replace("refs/heads/", "") }}
  - **Event**: {{ github_context.event_name }}
  
  ## Changed Documentation Files
  {% for file in files_changed %}
  ### {{ file.filename }} ({{ file.status }})
  {% if file.content %}
  Content:
  ```
  {{ file.content }}
  ```
  {% endif %}
  {% endfor %}
  
  ## Your Documentation Analysis Tasks
  1. **Review** documentation for clarity and completeness
  2. **Check** for grammar, spelling, and formatting issues
  3. **Suggest** improvements for better user understanding
  4. **Verify** technical accuracy and consistency
  5. **Write** analysis to: `/tmp/gemini-doc-analysis.md`
  
  ## Analysis Focus Areas
  - **Clarity**: Is the content easy to understand?
  - **Completeness**: Are there missing sections or information?
  - **Accuracy**: Is the technical information correct?
  - **Structure**: Is the document well-organized?
  - **Examples**: Are there helpful code examples or use cases?
  - **Accessibility**: Is the content accessible to the target audience?
  
  ## Output Guidelines
  - Provide specific suggestions with line references when possible
  - Highlight both strengths and areas for improvement
  - Include examples of improved wording where helpful
  - Consider the target audience (developers, users, contributors)
  
  Focus on making documentation more helpful and user-friendly.

output:
  format: "markdown"
  destination: "comment"
  output_file: "/tmp/gemini-doc-analysis.md"
  comment_template: |
    ## üìù Documentation Analysis by Gemini
    
    {{ output }}
    
    ---
    *Automated analysis for commit {{ github_context.sha[:8] }}*

enabled: true
priority: 6 