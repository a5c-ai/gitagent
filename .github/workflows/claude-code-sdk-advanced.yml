name: Claude Code SDK Advanced Analysis
on:
  push:
    branches: ["main", "develop"]
    paths: ["src/**/*.py", "docs/**/*.md"]
  pull_request:
    branches: ["main", "develop"]
    paths: ["src/**/*.py", "docs/**/*.md"]

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  claude-code-analysis:
    runs-on: ubuntu-latest
    name: Advanced Code Analysis with Claude Code SDK
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Claude Code SDK Analysis
        uses: a5c-ai/gitagent@main
        with:
          agent-type: 'claude-code-sdk'
          model: 'claude-3-sonnet-20241022'
          max-tokens: 4000
          temperature: 0.1
          max-turns: 10
          permission-mode: 'ask'
          allowed-tools: 'read_file,edit_file,grep_search,run_terminal_cmd'
          include-file-content: true
          include-file-diff: true
          claude-api-key: ${{ secrets.CLAUDE_API_KEY }}
          prompt-template-file: 'prompts/claude-code-sdk-advanced.md'

      - name: Create Review Branch
        if: github.event_name == 'push'
        id: create_branch
        run: |
          # Create branch name
          BRANCH_NAME="review-fixes-$(date +%Y%m%d-%H%M%S)"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          
          # Create and switch to new branch
          git checkout -b $BRANCH_NAME
          git config user.name "Claude Code SDK"
          git config user.email "claude-code-sdk@github-actions"

      - name: Commit Review Files
        if: github.event_name == 'push'
        run: |
          # Add all changed files
          git add -A
          
          # Check if there are changes to commit
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "ðŸ¤– Automated fixes from code review - ${{ github.sha }}"
            git push origin ${{ steps.create_branch.outputs.branch_name }}
          fi

      - name: Create Pull Request for Fixes
        if: github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const statusPath = '/tmp/review-status.md';
            
            let statusContent = '';
            if (fs.existsSync(statusPath)) {
              statusContent = fs.readFileSync(statusPath, 'utf8');
            }
            
            const pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `ðŸ¤– Code Review Fixes - ${{ github.sha }}`,
              head: '${{ steps.create_branch.outputs.branch_name }}',
              base: 'main',
              body: `## Automated Code Review Fixes
              
              This PR contains automated fixes identified during code review using the Claude Code SDK.
              
              ### Files Modified
              {% for file in files_changed %}
              - \`{{ file.filename }}\` ({{ file.status }})
              {% endfor %}
              
              ### Review Summary
              ${statusContent}
              
              **Review Report**: \`code-reviews/review-${{ github.sha }}.md\`
              **Commit**: ${{ github.sha }}
              
              ---
              **Generated by:** Claude Code SDK Advanced Analysis
              **Trigger:** ${{ github.event_name }} on ${{ github.ref_name }}
              `,
              draft: false
            });
            
            // Add labels
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.data.number,
              labels: ['automated', 'code-review', 'claude-ai', 'claude-code-sdk']
            });

      - name: Post Review Comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const statusPath = '/tmp/review-status.md';
            
            if (fs.existsSync(statusPath)) {
              const status = fs.readFileSync(statusPath, 'utf8');
              
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## ðŸ¤– Claude Code SDK Analysis Results\n\n**Repository:** ${{ github.repository }}\n**Commit:** \`${{ github.sha }}\`\n\n### Analysis Summary\n${status}\n\n### Detailed Review\nSee the full analysis in \`code-reviews/review-${{ github.sha }}.md\`\n\n---\n*Generated by Claude Code SDK Advanced Analysis*`
              });
            }

      - name: Create Status Check
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const statusPath = '/tmp/review-status.md';
            
            let state = 'success';
            let description = 'Code review completed successfully';
            
            if (fs.existsSync(statusPath)) {
              const status = fs.readFileSync(statusPath, 'utf8');
              
              if (status.includes('ISSUES') || status.includes('NEEDS_WORK')) {
                state = 'failure';
                description = 'Issues found in code review';
              } else if (status.includes('GOOD')) {
                state = 'success';
                description = 'Code review passed with minor suggestions';
              }
            }
            
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: state,
              description: description,
              context: 'Code Review with Claude Code SDK'
            }); 